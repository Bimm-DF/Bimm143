---
title: "Class13"
author: "Diana Furlan"
format: pdf
---

 Import countData and colData
```{r}
library(DESeq2)

counts <- read.csv("airway_scaledcounts.csv", row.names = 1)
metadata <- read.csv("airway_metadata.csv", row.names = 1)

head(metadata)
head(counts)
```


>Q1. How many genes are in this dataset? 

```{r}
nrow(counts)
```

>Q2. How many ‘control’ cell lines do we have?

```{r}
sum(metadata$dex == "control")
```

   Toy differential gene expression

Calculate mean per gene count for all control samples, treated and compare 

Find all control in counts

```{r}
control.inds <- metadata$dex == "control"
control.counts <- counts[,control.inds]

```
Find the mean across all control cols.

```{r}
treated.mean <- apply(counts[, metadata$dex == "treated"],2, mean)
```

Find the treated.mean

```{r}
treated <- metadata$dex == "treated"
treated.counts <- counts[,treated]
treated.mean <- rowMeans(treated.counts)
```

 ```{r}
meancounts <- data.frame(control.mean, treated.mean)
```


plot
 ```{r}
plot(meancounts)
```


 ```{r}
library(ggplot2)

ggplot(meancounts) + aes(control.mean, treated.mean) +
  geom_point()
```

 ```{r}
plot(meancounts[,1], meancounts[,2],log ="xy")
xlab= "log control counts", ylab "log treated"
```

log2 transformation for this type of data for easy interpretation of a fold-change and a rul of thumb 

```{r}
log2(40/10)


```
Calculate the fold change and add it to meancounts

 ```{r}
meancounts$log2fc <-
log2(meancounts$treated/meancounts$control.mean)
head(meancounts)
```

To filter zero values

 ```{r}
to.rm <- rowSums(meancounts[, 1:2] == 0) > 0

mycounts <- meancounts[!to.rm,]

```

>How many genes left?

 ```{r}
nrow(mycounts)
```

  Fold change

>How many genes are "up" regulated upon drug treatment at a threshold of +2 log2-fold-change?

1.extreact log2fc
2.find values above +2
3.count them


 ```{r}
sum(mycounts$log2fc > 2)
```


>How many gnees are"down" regulated upon drup treatment at a threschold of -2 log2-fold change?


 ```{r}
sum(mycounts$log2fc < -2)
```
  DESeq2 Analysis
Adding Stats 
package DEseq to do analysis

```{r}
# | message: false
library (DESeq2)
```

Format function

```{r}
dds <- DESeqDataSetFromMatrix(countData = counts, colData = metadata, design = ~dex)
```


Main function in package is DESeq(), we run in dds obj

```{r}
dds <-DESeq(dds)
```

```{r}
res<- results(dds)
head(res)
```

Results Fig. Volcano plot, shows fold change and stats

```{r}
plot(res$log2FoldChange,
-log(res$padj))

 Add line to thresholds or two with v=c(-2,2)
abline(v=2,col="gray")
abline(h=-log(0.005), col="gray")
```

Adding color
```{r}
mycols <- rep("grey", nrow(res))
mycols[res$log2FoldChange > 2 ]<- "red"


inds <- (res$padj < 0.01) & (abs(res$log2FoldChange) > 2 )
mycols[ inds ] <- "blue"

plot(res$log2FoldChange,
-log(res$padj), col=mycols)

#Add line to thresholds or two with v=c(-2,2)
abline(v=2,col="gray")
abline(h=-log(0.005), col="gray")
```


the more neg, the smaller the pvalue
```{r}
log(0.0005)

```
Save myresults to date out to disc

```{r}
write.csv(res, file="myresults.csv")
```
translate gene id into general language, with annotation, AnnotaationDbi
```{r}
#install.packages("BiocManager")

```


```{r}
#install.packages("AnnotationDbi")
#install.packages("org.Hs.eg.db")
BiocManager::install("AnnotationDbi")
BiocManager::install("org.Hs.eg.db")

```
```{r}
library("org.Hs.eg.db")
library("AnnotationDbi")

colums(org.Hs.eg.db)
```




```{r}
res$symbol <- mapIds(org.Hs.eg.db,
       keys = row.names(res),
       keytype = "ENSEMBL",
       column = "SYMBOL",
       multiVals="first")

head(res)
```
```{r}
res$genename <- mapIds(org.Hs.eg.db,
       keys = row.names(res),
       keytype = "ENSEMBL",
       column = "SYMBOL",
       multiVals="first")

head(res)
```

```{r}
res$entrez <- mapIds(org.Hs.eg.db,
       keys = row.names(res),
       keytype = "ENSEMBL",
       column = "SYMBOL")
```



Save 

```{r}

write.csv(res, file="results_annotated.csv")
```


##Pathway Analysis

Pathway mapping using gage package and pathview package

```{r}
#BiocManager::install("gage")
#BiocManager::install("pathview")
#BiocManager::install("gageData")
```
```{r}
library(gage)
library(gageData)
library(pathview)
```
```{r}
data(kegg.sets.hs)
data(sigmet.idx.hs)
```


```{r}
foldchanges = res$log2FoldChange
names(foldchanges) = res$entrez
head(foldchanges)
```
# Get the results
```{r}
# Get the results
keggres = gage(foldchanges, gsets=kegg.sets.hs)
```


Keggress obj
```{r}
attributes(keggres)
```

```{r}
head(keggres$less, 3)
```


use pathway to look at highlihged Kegg pathways

```{r}
pathview(gene.data = foldchanges, pathway.id="hsa04110")

```
hsa05310 didnt show up

![cell pathway with my DEGs](hsa04110.pathview.png)
